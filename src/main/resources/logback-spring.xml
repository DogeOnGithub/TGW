<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <contextName>Logback For demo Mobile</contextName>

    <!-- 设置log日志存放地址 -->
    <!--（改） 单环境设置 -->
    <property name="LOG_HOME" value="./log" />

    <!-- 多环境设置 （如果你需要设置区分 生产环境，测试环境...）-->
    <!-- 如果需要设置多环境的配置，只设置以下注释内容是不够的，还需要给每个环境设置对应的配置文件如（application-dev.properties）-->
    <!--
    <springProfile name="linux">
         <property name="LOG_HOME" value="/home/logger/mobile_log" />
     </springProfile>
     <springProfile name="dev">
         <property name="LOG_HOME" value="D:/logger/log4j" />
     </springProfile>
     <springProfile name="test">
         <property name="LOG_HOME" value="D:/logger/log" />
     </springProfile>
     <springProfile name="prod">
         <property name="LOG_HOME" value="D:/logger/log" />
     -->


    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder默认配置为PartternLayoutEncoder -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80} -%msg%n</pattern>
        </encoder>
        <target>System.out</target>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 ,每天保存（侧翻）一次 -->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>180</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{25} -%msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小 -->
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>20MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- （改）过滤器，可以指定哪些包，哪个记录到等级， -->
    <!-- 运用的场景比如，你只需要com.demo.controller包下的error日志输出。定义好name="com.demo.controller" level="ERROR" 就行了 -->
    <logger name="cn" level="INFO">
        <appender-ref ref="ROLLING_FILE" />
    </logger>

    <!-- 全局，控制台遇到INFO及以上级别就进行输出 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="ROLLING_FILE" />
    </root>

</configuration>